# This will eventually become a composite action 
# that should shepherd code to and possibly from a client
name: PATCHER

on:
  # push:
  #   branches:
  #     - 'release/**'
  pull_request_target:
    branches:
      - 'release/**'
    types:
      - closed

jobs:
  tag:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
     
      - name: CHANGE_LOG
        id: change-log 
        run: |
          major=$(echo ${{ github.ref }}| grep -o '[^release/]*$' | cut -d. -f1)
          minor=$(echo ${{ github.ref }}| grep -o '[^release/]*$' | cut -d. -f2)
          prev_tag=$(git tag --sort=-v:refname | grep "${major}.${minor}.*" | head -1)
          prev_patch=$(echo $prev_tag | cut -d. -f3)
          next_patch=$(($prev_patch + 1))

          echo "prev_tag=$prev_tag" >> $GITHUB_OUTPUT
          echo "next_tag=$major.$minor.$next_patch" >> $GITHUB_OUTPUT
          echo "major=$major"
          echo "minor=$minor"
          echo "prev_patch=$prev_patch"
          echo "next_patch=$next_patch"

      - name: CREATE PATCH-TAG 
        uses: rickstaa/action-create-tag@v1
        with:
          tag: ${{steps.change-log.outputs.next_tag}}
          message: "Auto-generated Tag for Patch against Release: ${{ github.ref }}"
  
  pr-into-dev:
    runs-on: ubuntu-latest
    if: github.event.pull-request.merged == true
    needs: [tag]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: li-argonauts/gha-tag-parser@v0.4.0
        id: tag-parser

      - name: Open PR
        uses: repo-sync/pull-request@v2
        with:
          github_token: ${{ secrets.ACCESS_TOKEN }}
          source_branch: ${{ github.head_ref }}
          destination_branch: development 
          pr_title: "ğŸ¤– auto-generated PR into `development` from: `${{steps.tag-parser.outputs.prev_tag}}` --> `${{steps.tag-parser.outputs.latest_tag}})`"
          pr_body: |
            # Release Patch 
            
            ${{steps.tag-parser.outputs.compare_log}}

            **Full Changelog**: ${{ steps.tag-parser.outputs.compare_url }} 
          pr_label: 'HOTFIX'

  draft-release:
    runs-on: ubuntu-latest
    needs: [tag]
    if: github.event.pull-request.merged == true
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false

      - uses: li-argonauts/gha-tag-parser@v0.4.0
        id: tag-parser

      - name: Create Release
        if: ${{ steps.tag-parser.outputs.is_patch == 1}} 
        uses: actions/create-release@v1
        env: 
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN}}
        with:
          tag_name: ${{ steps.tag-parser.outputs.latest_tag }}
          release_name: Release - ${{ steps.tag-parser.outputs.latest_tag }}
          body: |
            Changes in this Release:
              ${{ steps.tag-parser.outputs.compare_log}}

            **Full Changelog**: ${{ steps.tag-parser.outputs.compare_url }}
          draft: true 

  
